name: Release and deploy to Prod

on:
  # Release is only done manually
  workflow_dispatch:
    inputs:
      deploy_version:
        description: 'Used to deploy a version of the app. If not provided, a new version will be created.'
        required: false

jobs:
  release-deploy:
    runs-on: ubuntu-latest
    env:
      # needed to create commit or tag
      # see https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
      GIT_COMMITTER_NAME: "github-actions[bot]"
      GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      ENVIRONMENT: prd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Caching
        uses: ./.github/actions/cache

      - name: Setup tools and credentials
        uses: ./.github/actions/setup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # gsemver needs to know the git branch
      - name: Extract Branch Name in GIT_BRANCH env
        run: |
          echo "GITHUB_HEAD_REF=${GITHUB_HEAD_REF} & GITHUB_REF=${GITHUB_REF}"
          if [ -n "$GITHUB_HEAD_REF" ]
          then
            echo "GIT_BRANCH=${GITHUB_HEAD_REF#refs/heads/}" >> $GITHUB_ENV
          else
            echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi
      - id: tag
        name: Create or checkout tag
        run: |
          if [ -z "${{ inputs.deploy_version }}" ]; then
            version="v$(gsemver bump)"
          else
            # assume we get v prefix. Eg: v1.2.3
            version="${{ inputs.deploy_version }}"
          fi

          if [ $(git tag -l "$version") ]; then
            echo "Tag $version already exists. Checking it out."
            git checkout "$version"
          else
            echo "Creating tag $version"
            git tag -am "Release $version by ci script" "$version"
            echo "push_tag=true" >> "$GITHUB_OUTPUT"
          fi

          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Build
        uses: ./.github/actions/build
        with:
          environment: ${{ env.ENVIRONMENT }}

      - name: Push tag
        if: steps.tag.outputs.push_tag == 'true'
        run: git push origin "${{ steps.tag.outputs.version }}"

      - name: Deploy API and UI to Prod
        run: |
          echo "Deploying v${{ steps.tag.outputs.version }} to ${{ env.ENVIRONMENT }}"
          ./pw deploy-both-${{ env.ENVIRONMENT }}
